### 1-3. Gaussian discriminant analysis (Gaussian Naive Bayes) with iris dataset

#Download the dataset
!wget https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv

#Overview the dataset
df3 = pd.read_csv('iris.csv', names=["SepalLength","SepalWidth","PetalLength","PetalWidth","Species"])
df3.head()

#Data preprocessing
df3['SepalLength'] = df3['SepalLength'].astype(float)
df3['SepalWidth'] = df3['SepalWidth'].astype(float)
df3['PetalLength'] = df3['PetalLength'].astype(float)
df3['PetalWidth'] = df3['PetalWidth'].astype(float)
df3['Species'] = df3['Species'].apply(lambda x: 0 if x == "Iris-virginica" else (1 if x=="Iris-versicolor" else 2))
df3.head()

X = df3[['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth']]
y = df3['Species']
print(X.shape)
print(y.shape)


## Goal: Use GDA to predict y (what the species of the flower is) based on given features (SepalLength, SepalWidth, PetalLength, PetalWidth)
❗READ CAREFULLY ⬇
#*   Use the functions we covered in the lab practice
#*   TO-DO:
  #    1.   Split the dataset into training and testing sets (75:25)
  #    2.   Using the training set, compute mean and std for each class and report them (Note that we have three classes (i.e., "Iris-virginica" (0), "Iris-versicolor" (1), "Iris-setosa" (2)))
  #    3.   Using testing set, compute the class probabilities as we did in the lab practice. Report the final prediction labels for each testing sample and testing accuracy.
  #    4.   Again, test again using the following data and report class prediction probabilities of each class and final prediction label
          #   - test=[5.7, 2.9, 4.2, 1.3]


